apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    router: router
  name: router
  namespace: default
spec:
  selector:
    matchLabels:
      router: router
  template:
    metadata:
      labels:
        router: router
    spec:
      containers:
      - env:
        - name: DEFAULT_CERTIFICATE_DIR
          value: /etc/pki/tls/private
        - name: DEFAULT_CERTIFICATE_PATH
          value: /etc/pki/tls/private/tls.crt
        - name: ROUTER_EXTERNAL_HOST_INSECURE
          value: "false"
        - name: ROUTER_EXTERNAL_HOST_PRIVKEY
          value: /etc/secret-volume/router.pem
        - name: ROUTER_LISTEN_ADDR
          value: 0.0.0.0:1936
        - name: ROUTER_METRICS_TYPE
          value: haproxy
        - name: ROUTER_SERVICE_HTTPS_PORT
          value: "443"
        - name: ROUTER_SERVICE_HTTP_PORT
          value: "80"
        - name: ROUTER_SERVICE_NAME
          value: router
        - name: ROUTER_SERVICE_NAMESPACE
          value: default
        - name: STATS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: router-stats
        - name: STATS_PORT
          value: "1936"
        - name: STATS_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: router-stats
        - name: ROUTER_THREADS
          value: "0"
        - name: EXTENDED_VALIDATION
          value: "true"
        - name: SSL_MIN_VERSION
          value: TLSv1.2
        image: '*** GENERATED ***'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 1936
            scheme: HTTP
          initialDelaySeconds: 10
        name: router
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        - containerPort: 1936
          name: stats
        readinessProbe:
          httpGet:
            path: healthz/ready
            port: 1936
            scheme: HTTP
          initialDelaySeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/pki/tls/metrics/
          name: metrics-server-certificate
          readOnly: true
        - mountPath: /etc/pki/tls/private
          name: server-certificate
          readOnly: true
      nodeSelector:
        node-role.kubernetes.io/infra: "true"
      serviceAccountName: router
      volumes:
      - name: metrics-server-certificate
        secret:
          secretName: router-metrics-tls
      - name: server-certificate
        secret:
          secretName: router-certs
