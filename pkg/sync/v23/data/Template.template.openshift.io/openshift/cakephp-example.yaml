apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: cakephp-example
  template: cakephp-example
message: |-
  The following service(s) have been created in your project: ${NAME}.

  For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/cakephp-ex/blob/master/README.md.
metadata:
  annotations:
    description: An example CakePHP application with no database. For more information
      about using this template, including OpenShift considerations, see https://github.com/sclorg/cakephp-ex/blob/master/README.md.
    iconClass: icon-php
    openshift.io/display-name: CakePHP
    openshift.io/documentation-url: https://github.com/sclorg/cakephp-ex
    openshift.io/long-description: This template defines resources needed to develop
      a CakePHP application, including a build configuration and application deployment
      configuration.  It does not include a database.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    tags: quickstart,php,cakephp
    template.openshift.io/bindable: "false"
  name: cakephp-example
  namespace: openshift
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${NAME}
  stringData:
    cakephp-secret-token: ${CAKEPHP_SECRET_TOKEN}
    cakephp-security-salt: ${CAKEPHP_SECURITY_SALT}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    name: ${NAME}
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    postCommit:
      script: ./vendor/bin/phpunit
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: COMPOSER_MIRROR
          value: ${COMPOSER_MIRROR}
        from:
          kind: ImageStreamTag
          name: php:${PHP_VERSION}
          namespace: ${NAMESPACE}
      type: Source
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - env:
          - name: CAKEPHP_SECRET_TOKEN
            valueFrom:
              secretKeyRef:
                key: cakephp-secret-token
                name: ${NAME}
          - name: CAKEPHP_SECURITY_SALT
            valueFrom:
              secretKeyRef:
                key: cakephp-security-salt
                name: ${NAME}
          - name: OPCACHE_REVALIDATE_FREQ
            value: ${OPCACHE_REVALIDATE_FREQ}
          image: ' '
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 3
          name: cakephp-example
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 60
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - cakephp-example
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: cakephp-example
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  required: true
  value: openshift
- description: Version of PHP image to be used (7.3 or latest).
  displayName: PHP Version
  name: PHP_VERSION
  required: true
  value: "7.3"
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/sclorg/cakephp-ex.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
- description: Set this to the relative path to your project if it is not in the root
    of your repository.
  displayName: Context Directory
  name: CONTEXT_DIR
- description: The exposed hostname that will route to the CakePHP service, if left
    blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
- description: Set this to a long random string.
  displayName: CakePHP Secret Token
  from: '[\w]{50}'
  generate: expression
  name: CAKEPHP_SECRET_TOKEN
- description: Security salt for session hash.
  displayName: CakePHP Security Salt
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: CAKEPHP_SECURITY_SALT
- description: How often to check script timestamps for updates, in seconds. 0 will
    result in OPcache checking for updates on every request.
  displayName: OPcache Revalidation Frequency
  name: OPCACHE_REVALIDATE_FREQ
  value: "2"
- description: The custom Composer mirror URL
  displayName: Custom Composer Mirror URL
  name: COMPOSER_MIRROR
